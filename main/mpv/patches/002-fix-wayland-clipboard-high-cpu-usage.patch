From 896b3400f3cad286533dbb9cc3658ce18ed9966c Mon Sep 17 00:00:00 2001
From: nanahi <130121847+na-na-hi@users.noreply.github.com>
Date: Sun, 13 Apr 2025 08:33:12 -0400
Subject: [PATCH] clipboard-wayland: read already sent data when the fd is hung
 up

A "hung up" fd only indicates that the other end of the pipe is closed.
This can happen when the other client has already sent some data into
the pipe and closed its end. This should not be treated as an error,
and reading data should proceed until read() returns 0 or -1.

Premuturely destroying offer in this case breaks getting selection
data. Change it so that the cleanup on error happens after the selection
data is read.

Fixes: d20ded876d27497d3fe6a9494add8106b507a45c
---
 player/clipboard/clipboard-wayland.c | 12 ++++++------
 1 file changed, 6 insertions(+), 6 deletions(-)

diff --git a/player/clipboard/clipboard-wayland.c b/player/clipboard/clipboard-wayland.c
index bd8ac35af2da5..b3da3ff134574 100644
--- a/player/clipboard/clipboard-wayland.c
+++ b/player/clipboard/clipboard-wayland.c
@@ -348,18 +348,18 @@ static bool clipboard_wayland_dispatch_events(struct clipboard_wayland_priv *wl,
     if (fds[1].revents & POLLIN)
         return false;
 
-    if (fds[2].revents & (POLLERR | POLLHUP | POLLNVAL))
-        destroy_offer(wl->selection_offer);
-
-    if (fds[3].revents & (POLLERR | POLLHUP | POLLNVAL))
-        destroy_offer(wl->primary_selection_offer);
-
     if (fds[2].revents & POLLIN)
         get_selection_data(wl, wl->selection_offer, false);
 
     if (fds[3].revents & POLLIN)
         get_selection_data(wl, wl->primary_selection_offer, true);
 
+    if (fds[2].revents & (POLLERR | POLLHUP | POLLNVAL))
+        destroy_offer(wl->selection_offer);
+
+    if (fds[3].revents & (POLLERR | POLLHUP | POLLNVAL))
+        destroy_offer(wl->primary_selection_offer);
+
     wl_display_dispatch_pending(wl->display);
     return true;
 }
